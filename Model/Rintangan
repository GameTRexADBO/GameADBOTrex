/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Nadhila Herdanti Dwi Larasati 2014730035
 */
public abstract class Rintangan {

    /**
     * attribute posisiX: posisi rintangan pada sumbu x attribute posisiY:
     * posisi rintangan pada sumbu y attribute posisiZ: posisi rintangan pada
     * sumbu z
     */
    protected int x;
    protected int y;
    protected int z;

    /**
     * constructor kelas Rintangan yang menginisialisasi variabel
     * @param x
     * @param y
     * @param z 
     */
    public Rintangan(int x, int y, int z) {
        this.x = x;
        this.y = y;
        this.z = z;
    }

    /**
     * Method untuk mengubah nilai koordinat x rintangan
     *
     * @return x
     */
    public int getX() {
        return x;
    }

    /**
     * Method untuk mengubah nilai koordinat rintangan x
     *
     * @param x
     */
    public void setX(int x) {
        this.x = x;
    }

    /**
     * Method untuk mengubah nilai koordinat y rintangan
     *
     * @return
     */
    public int getY() {
        return y;
    }

    /**
     * Method untuk mengubah nilai koordinat y rintangan
     *
     * @param y
     */
    public void setY(int y) {
        this.y = y;
    }

    /**
     * Method untuk mengubah nilai koordinat z rintangan
     *
     * @return
     */
    public int getZ() {
        return z;
    }

    /**
     * Method untuk mengubah nilai koordinat z rintangan
     *
     * @param z
     */
    public void setZ(int z) {
        this.z = z;
    }

    /**
     * Method abstract ini akan di override oleh sub-class kaktus dan sub-class
     * pterodactyl untuk merandom kemunculan rintangan-rintangan tersebut
     */
    protected abstract void spawn();

    /**
     * Method ini untuk menegtahui apakah Trex mengenai rintangan atau tidak
     * Jika tidak kena maka Trex akan tetap hidup Jika kena maka akan game over
     * dan muncul score
     *
     * @param score
     * @return
     */
    protected boolean isHit(Score score) {
        boolean live = true;
        if (live != true) {
            return score.getHighScore();
        } else {
            //masih lari sampe mati
        }
    }
}

